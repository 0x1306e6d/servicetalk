plugins {
  id "io.spring.dependency-management" version "1.0.4.RELEASE"
}

apply plugin: "maven-publish"

dependencyManagement {
  dependencies {
    // First Party ServiceTalk Dependencies
    dependency "io.servicetalk:servicetalk-http-router-predicate:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-http-netty:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-http-netty-internal:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-http-api:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-redis-api:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-redis-netty:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-redis-utils:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-dns-discovery-netty:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-loadbalancer:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-redis-internal:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-tcp-netty-internal:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-client-internal:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-client-api:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-log4j2-mdc:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-log4j2-mdc-internal:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-rxjava-context:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-concurrent-context:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-concurrent-api:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-buffer-api:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-buffer-netty:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-transport-api:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-transport-netty:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-concurent:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-test-resources:0.1.0-SNAPSHOT"
    dependency "io.servicetalk:servicetalk-annotations:0.1.0-SNAPSHOT"
  }
}

publishing {
  publications {
    maven(MavenPublication) {
    }
  }
}

def versionString = version.toString()

if (0 == repositories.size()) {
  repositories {
    jcenter()
  }
}
else {
  task('package') // NOOP
  task('check')   // NOOP
  if (!versionString.endsWith("-apple")) {
    version += "-apple"
  }
}

if (!hasProperty('releaseBuild') && !versionString.endsWith("-SNAPSHOT")) {
  version += "-SNAPSHOT"
}
